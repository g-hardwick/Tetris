import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Collections;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * class for creating the GUI elements and creating the board. Has the main method for the program
 */
public class PlayGame extends JPanel implements KeyListener {
	static GameBoard board;
	static JLabel score;

	/*
	 * saves the best score as a .txt file
	 */
	public static void saveGame() {
		ObjectInputStream in = null;
		ObjectOutputStream out = null;
		int placeholder = 0;
		try {
			in = new ObjectInputStream(new FileInputStream("Tetris.txt"));
			Object o = in.readObject();
			placeholder = (int) o;
			in.close();
		} catch (IOException e) {

		} catch (ClassNotFoundException e) {
		}
		if (placeholder < board.getScore()) {
			try {
				out = new ObjectOutputStream(new FileOutputStream("Tetris.txt"));
				out.writeObject(board.getScore());
				out.close();
			} catch (FileNotFoundException e) {
			} catch (IOException e) {
			}
		}
	}

	/*
	 * checks and reads if there is an already saved game
	 */
	public static void readGame() {
		ObjectInputStream in = null;
		String welcome = "Welcome back! Your best score is: ";
		int placeholder = -10;
		try {
			in = new ObjectInputStream(new FileInputStream("Tetris.txt"));
			Object o = in.readObject();
			placeholder = (int) o;
			welcome = welcome + o;
		} catch (IOException e) {
		} catch (ClassNotFoundException e) {
		}
		if (placeholder == -10) {
			welcome = "let's play!";
		}
		board.updateScore(score, welcome);
	}

	/*
	 * the runner for the game, creates the JFrame with the board and scores and the
	 * mouse listener
	 */
	public void run() {
		JFrame frame = new JFrame("Tetris");

		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(320, 715);
		frame.getContentPane().setBackground(Color.black);

		JPanel scorePanel = new JPanel();

		frame.setLayout(new BorderLayout());

		score = new JLabel("");
		board = new GameBoard();
		board.updateScore(score);

		readGame();

		scorePanel.add(score);

		frame.add(scorePanel, BorderLayout.PAGE_START);
		frame.add(board, BorderLayout.CENTER);

		frame.addKeyListener(this);
		frame.setVisible(true);
	}

	/*
	 * main method, creates a PlayGame and runs it.
	 */
	public static void main(String[] args) {

		PlayGame game = new PlayGame();
		game.run();
	}

	/*
	 * keyListener resposeds to the given key presses
	 */
	public void keyTyped(KeyEvent e) {
	}

	public void keyPressed(KeyEvent e) {
		if (!board.inGame) {
			saveGame();
		}
		switch (e.getKeyCode()) {
		case KeyEvent.VK_UP:
			board.rotate();
			repaint();
			break;
		case KeyEvent.VK_LEFT:
			board.moveX(false);
			repaint();
			break;
		case KeyEvent.VK_RIGHT:
			board.moveX(true);
			repaint();
			break;
		case KeyEvent.VK_DOWN:
			board.fall();
			board.addScore(1);
			board.updateScore(score);
			repaint();
			break;
		}
	}

	public void keyReleased(KeyEvent e) {
	}
}
